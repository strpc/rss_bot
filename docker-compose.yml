version: "3.8"

x-env-app:
  &env-app
  environment:
    - DEBUG
    - LOG_LEVEL
    - DATABASE_URL
    - DATABASE_PARAMSTYLE
    - CELERY_BROKER
    - CELERY_HOUR_BEAT_INTERVAL
    - CELERY_MINUTE_BEAT_INTERVAL
    - TELEGRAM_TOKEN
    - EASY_NOTIFYER_TOKEN
    - EASY_NOTIFYER_CHAT_ID
    - EASY_NOTIFYER_SERVICE_NAME
    - POCKET_CONSUMER_KEY
    - POCKET_REDIRECT_URL
    - LIMIT_LOAD_FEED
    - LIMIT_TITLE
    - LIMIT_TEXT
    - LIMIT_COUNT_FEED

services:
  backend:
    image: rss_bot_backend:${VERSION:-latest}
    build:
      context: ./backend
      dockerfile: ./docker/backend.dockerfile
    hostname: backend
    <<: *env-app
    volumes:
    - ./db/:/app/app/db/

  admin:
    image: rss_bot_admin:${VERSION:-latest}
    build:
      context: ./admin
      dockerfile: ./docker/Dockerfile
    hostname: admin
    environment:
      - DEBUG=False
      - ALLOWED_HOSTS=admin
      - LOGLEVEL=${LOGLEVEL}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./db:/app/app/db
      - static_volume:/app/app/static/

  nginx:
    image: nginx:1.21.0
    ports:
      - 8080:80
    volumes:
      - static_volume
      - ./nginx:/etc/nginx/conf.d
      - static_volume:/app/app/static/

  worker:
    image: rss_bot_worker:${VERSION:-latest}
    build:
      context: ./backend
      dockerfile: ./docker/worker.dockerfile
    hostname: worker
    <<: *env-app
    volumes:
      - ./db:/app/app/db
    command: [ "worker" ]

  beat:
    worker:
      image: rss_bot_worker:${VERSION:-latest}
      build:
        context: ./backend
        dockerfile: ./docker/worker.dockerfile
      hostname: beat
      <<: *env-app
      volumes:
        - ./db:/app/app/db
      command: [ "beat" ]

  rabbitmq:
    image: rabbitmq:3.8.16
    restart: unless-stopped
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER={$RABBITMQ_USER:-user}
      - RABBITMQ_DEFAULT_PASS={$RABBITMQ_PASSWORD:-hackme}

volumes:
  static_volume:
    # todo: добавить логи
